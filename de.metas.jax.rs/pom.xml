<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>de.metas</groupId>
		<artifactId>de.metas.parent</artifactId>
		<version>10.0.0</version>
		<relativePath>../de.metas.parent/pom.xml</relativePath>
	</parent>

	<groupId>de.metas.jax.rs</groupId>
	<artifactId>de.metas.jax.rs</artifactId>

	<properties>
		<migration-sql-basedir></migration-sql-basedir>
	</properties>

	<dependencies>
		<!-- even without using the http transport we do need the servlet API!-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>javax.transaction-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-core</artifactId>
			<version>${metasfresh.cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-jms</artifactId>
			<version>${metasfresh.cxf.version}</version>
		</dependency>

		<!-- needed for jmx -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-management</artifactId>
			<version>${metasfresh.cxf.version}</version>
		</dependency>
		
		<!-- needed, even if we currently communicate with JMS only  -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${metasfresh.cxf.version}</version>
		</dependency>
		<!-- not needed since we currently only communicate over jms 
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http-jetty</artifactId>
			<version>${metasfresh.cxf.version}</version>
			<scope>test</scope>
		</dependency>
		-->

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${metasfresh.cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>${metasfresh.cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-extension-providers</artifactId>
			<version>${metasfresh.cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
		</dependency>

		<dependency>
			<groupId>de.metas.adempiere.adempiere</groupId>
			<artifactId>de.metas.adempiere.adempiere.base</artifactId>
			<version>10.0.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>de.metas.util</groupId>
			<artifactId>de.metas.util</artifactId>
			<version>10.0.0</version>
		</dependency>

		<!-- spring -->
		<!-- Note about all these exclusions:
			We import apache-cxf's dependency management, which amounts to spring-4.1.8.
			However, in metasfresh, we currently use 4.2.4.
			So, as of now, we explicitly declare the
			spring-dependencies here, with our version 4.2.4 and we explicitly exclude their dependencies
			which might otherwise be resolved to 4.1.8
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

	</dependencies>


	<dependencyManagement>
		<dependencies>
			<!-- Pull in the cxf-parents as import scope to re-use the dependenecyManagement 
				sections of those poms. Those sections define the versions of various third 
				party deps that CXF used to build with and test with and we would like to 
				make sure the same versions are used for the samples 
			-->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-parent</artifactId>
				<version>${metasfresh.cxf.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf</artifactId>
				<version>${metasfresh.cxf.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

</project>
